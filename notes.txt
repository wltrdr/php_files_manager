	Design 100% responsive
	Chargement des elements en ajax
	Mise à jour automatique des éléments affichés
	Upload de plusieurs fichiers simultanément
	Upload des fichiers via drap & drop dans le dossier ouvert ou dans ses sous dossiers
	Copie, déplacement, renommage, duplication, suppression et modification des permissions des fichiers et des dossiers
	Sélection multiple des fichiers et dossiers avec le curseur de la souris ou avec les touches Ctrl, Shift et Ctrl+A
	Raccourcis clavier Crtl+C, Ctrl+X, Ctrl+V et Suppr pour copier, couper, coller et supprimer les éléments
	Edition et téléchargement des fichiers (même ceux non accessibles sur le web)
	Création de nouveaux dossiers et fichiers
	Affichage du chemin courant et de l'arborescense des dossiers depuis la racine du serveur (sauf sur mobile)
	Boutons de controle : Historique back et forward, dossier parent, retour vers l'accueil, bouton de rafraichissement
	Plusieurs types d'affichage (petites icones, grosses icones ou détails)
	Choix de l'ordre d'affichage (nom, date, taille, type, croissant ou decroissant)
	Choix des actions (remplacer, renommer, ne rien faire) si un fichier au même nom existe lors d'un upload, d'une copie ou d'un déplacement d'élement.
	Accès au gestionnaire de fichiers protégé par mot de passe
	Protection anti-piratage via url connue grace à un système de token
	Mise à jour du script en 1 clic


'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’

0.9.7⤵
trash :
	php : si $trash_active === true on utilise to_trash() partout ou il le faut (unlink, rmdir, rm_full_dir)
	js : si trash actif move_selected vers dans trash => &trash= => trasheds
	php : &empty_trash=true
	php : &remove_trash=element
	js : sous menu element trash => juste ouvrir, purger // sous menu elements dans trash => idem sauf que supprime devient definitivement // sous menu zone trash => ajout purger, enlever create et upload
	php js : icone dans tree tout en haut (icone remplie quand hover deplacement mais icone interdit si aussi ouvert dans elements)
revoir couleurs boxes et menus, pc et mobile

0.9.9⤵
création (symlink) + gestion liens symboliques :
	menu pour liens symboliques fichier ou dossier :
	↘
		afficher la cible (readlink)
		dupliquer
		deplacer
		copier

1.0.0⤵
tester caracteres ' " & ? dans nom fichier ou nom dossier (ou dans fichier quand edite) ? doute quand variable js est ecrite dans code html a inserer (showBox, openBox, menuDir, menuFile..)
verifier : let, const, ;  //  ' " `  //  OR AND  //  espaces \t  //  htmlentities & urlencode / urldecode partout  //  \n\t*\{ => {  //  if\(([^\)]+)\)\n\t*([a-z]) => if($1) $2  //  while\(([^\)]+)\)\n\t*([a-z]) => while($1) $2  //  for\(([^\)]+)\)\n\t*([a-z]) => for($1) $2  //  else\n\t*([a-z]) => else $1
minimiser noms vars + sauts de lignes
chercher traces fr + corriger eng
tout reverifier
tout recompiler
tout tester

0.1.1⤵
zip-dezip (fichier, dossier, multiple)
recherche (nv bouton ctrl)
upload from url (renseigner php_global_infos.php dans une array js)
generateur .htaccess + .htpasswd (affiche si existe deja)
generateur template.html (template.html style.css script.js)
??? history push a chaque requete ajax (sauf login) (window.)history.pushState((obj|null), (titre|null), url) // window.addEventListener("popstate", () => { reload dir })


'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’

$server_infos['server_root'] (const)	c:/xampp/htdocs
$server_infos['web_http'] (const)		https://
$server_infos['web_root'] (const)		localhost
$server_infos['script'] (const)			/php_files_manager/php_files_manager.php
$script_path (const)					c:/xampp/htdocs/php_files_manager/php_files_manager.php

$server_dirs[$i]['name, path'] (const)	[ C:  xampp  htdocs  php_files_manager ], [ ../../../  ../../  ../  . ]
$nb_server_dirs (const)					4

$current								../../dir1/dir2/
$adds_dirs								[ dir1 dir2 ]
$cur_rmvs								2
$cur_adds								2
$dirs[$i]['name, path']					[ C:  xampp  dir1  dir2 ], [ ../../../  ../../  ../../dir1/  ../../dir2/ ]
$nb_dirs								4

$script_dirs (const)					[ php_files_manager ]
$nb_script_dirs (const)					1


'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’

$_GET['get_upload_sizes']
	(sizes)
$_GET['download']
	$_SESSION['pfm'] || $_POST['pwd']
		$_GET['dir']
			$_GET['token']
				(dpwnload)
$_POST['logout']
	(logout)
$_POST
	$_SESSION['pfm'] || $_POST['pwd']
		$_POST['dir']
			$_POST['token']
				$_POST['upload']
					(upload)
				$_POST['new']
					(new)
				$_POST['rename']
					(rename)
				$_POST['copy']
					(copy)
				$_POST['move']
					(move)
				$_POST['delete']
					(delete)
				$_POST['read_file']
					(read_file)
				$_POST['edit_file']
					(edit_file)
				$_POST['get_chmods']
					(get_chmods)
				$_POST['set_chmods']
					(set_chmods)
			(tree)
			! $_POST['tree_only']
				(return)
else
	$_GET['dir']
		(currentPath)
	(template)


'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’

( x )	 <	 	 ( y - 1 )
( x )	 <=	 	 ( y - 2 )

( x )	 >	 	 ( y - 1 )
( x )	 >=	 	 ( y )

( x )	 <	 	 ( y + 1 )
( x )	 <=	 	 ( y )

( x )	 >	 	 ( y + 1 )
( x )	 >=	 	 ( y + 2 )

-----  -----  -----  -----

( x - 1 )	 <	 	 ( y )
( x )	 	 <=	 	 ( y )

( x - 1 )	 >	 	 ( y )
( x - 2 )	 >=	 	 ( y )

( x + 1 )	 <	 	 ( y )
( x + 2 )	 <=	 	 ( y )

( x + 1 )	 >	 	 ( y )
( x )	 	 >=	 	 ( y )

-----  -----  -----  -----

( x )	 <=	 	 ( y - 1 )
( x )	 <	 	 ( y )

( x )	 >=	 	 ( y - 1 )
( x )	 >	 	 ( y - 2 )

( x )	 <=	 	 ( y + 1 )
( x )	 <	 	 ( y + 2 )

( x )	 >=	 	 ( y + 1 )
( x )	 >	 	 ( y )

-----  -----  -----  -----

( x - 1 )	 <=	 	 ( y )
( x - 2 )	 <	 	 ( y )

( x - 1 )	 >=	 	 ( y )
( x )	 	 >	 	 ( y )

( x + 1 )	 <=	 	 ( y )
( x )	 	 <	 	 ( y )

( x + 1 )	 >=	 	 ( y )
( x + 2 )	 >	 	 ( y )


'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’'"`ʿ’

file_put_contents('test.txt', "Ceci est le\ncontenu du fichier\ntest !!");

link('test.txt', 'testlink');
symlink('test.txt', 'testsymlink');

echo "<br>testlink:<br>
is_link=" . ( is_link('testlink') ? 'true' : 'false' ) ."<br>
linkinfo=" . linkinfo('testlink') . "<br><br>
testsymlink:<br>
is_link=" . ( is_link('testsymlink') ? 'true' : 'false' ) ."<br>
readlink=" . readlink('testsymlink') . "<br>
linkinfo=" . linkinfo('testsymlink') . "<br>
";
exit();

function test_dir($dir = '../../../', $level = 0)
{
	if($handle = @opendir($dir))
	{
		while(false !== ($entry = @readdir($handle)))
		{
			$path = $dir . $entry;
			if($entry != '.' && $entry != '..')
			{
				if(is_dir($path))
				{
					//echo'<p style="margin-left: ' . $level . "em;\"><b>$entry/</b><br></p>";
					test_dir($path . '/', $level + 1);
				}
				elseif(is_file($path))
				{
					//echo'<p style="color: green; margin-left: ' . $level . "em;\">$entry (file)<br></p>";
				}
				elseif(is_link($path))
					echo'<p style="color: blue; margin-left: ' . $level . "em;\">$path (link)<br></p>";
				else
					echo'<p style="color: red; margin-left: ' . $level . "em;\">$path (unknown)<br></p>";
			}
		}
		closedir($handle);
	}
}
echo'<style>
* {
	margin: 0px;
	padding: 0px;
}
</style>';
test_dir();
exit();
